!function() {
    var PKStore = function PKStore() {};

    PKStore.prototype.init = function init(db) {
        this.db = db;
    };

    PKStore.prototype.get = function get(cb) {
        var self = this;
        this.db.get(this.key, function(err, data) {
            if (err) return cb(new I.Exception(10125, err));
            var pkClass = self.getModel();
            var pk = new pkClass(data);
            cb(null, pk);
        });
    };

    PKStore.prototype.set = function set(pk, cb) {
        cb = cb || function() {};
        if (pk instanceof this.getModel() === false) return cb(new I.Exception(10109));
        if (pk.updated === false) return cb(null);
        this.db.set(this.key, pk.get(), function(err, result) {
            if (err) return cb(new I.Exception(10122, err));
            pk.updated = false;
            cb(null, result);
        });
    };

    PKStore.prototype.unset = function unset(pk, cb) {
        cb = cb || function() {};
        if (pk instanceof this.getModel() === false) return cb(new I.Exception(10121));
        this.db.del(this.key, function(err, result) {
            if (err) return cb(new I.Exception(10124, err));
            cb(null, result);
        });
    };

    PKStore.prototype.sync = function sync(pk, cb) {
        cb = cb || function() {};
        if (pk.tagDelSync) {
            this.unset(pk, cb);
        } else {
            this.set(pk, cb);
        }
    };

    I.Util.require('PKStore', 'Models', PKStore);
}();
