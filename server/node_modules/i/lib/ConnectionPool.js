!function () {
    var ConnectionPool = function ConnectionPool() {
        this.pool = [];
    };

    ConnectionPool.prototype.push = function push(connection) {
        this.pool.push(connection);
    };

    ConnectionPool.prototype.remove = function remove(connection) {
        var index = this.pool.indexOf(connection);
        if (index !== -1) this.pool.splice(index, 1);
    };

    ConnectionPool.prototype.length = function length() {
        return this.pool.length;
    };

    ConnectionPool.prototype.broadcast = function broadcast(api, data) {
        var res = {
            a: api,
            r: 0,
            d: data,
        };
        var json = JSON.stringify(res);
        this.pool.forEach(function(connection) {
            connection.sendUTF(json);
        });
    };

    ConnectionPool.prototype.single = function single(connection, api, code, data) {
        data = data || {};
        var res = {
            a: api,
            r: code,
            d: data,
        };
        connection.sendUTF(JSON.stringify(res));
        console.log('req:', api, 'result:', code, 'data', data);
    };

    I.Util.require('ConnectionPool', '', ConnectionPool)
}();
