var fs = require('fs');
var path = require('path');
var orms = require(APP_ABS_PATH + '/config/orm.js').orms;

var Loader = function() {};

Loader.prototype.loadCore = function loadCore() {
    // redis
    var env = require(APP_ABS_PATH + '/config/env.js').env;
    global.db = require('redis').createClient(env.REDIS_PORT, env.REDIS_HOST);

    global.I = {};
    require('./Util.js');
    require('./ConnectionPool.js');
    require('./Const.js');
    require('./DataPool.js');
    require('./Exception.js');
    require('./ExceptionCodes.js');
    require('./LogicController.js');
    require('./Route.js');

    // models
    require('./model/PK.js');
    require('./model/Model.js');
    require('./model/List.js');
    require('./model/PKStore.js');
    require('./model/ModelStore.js');
    require('./model/ListStore.js');
};

Loader.prototype.loadApp = function loadApp(appDir) {
    require(I_ABS_PATH + '/lib/model/Maker.js');
    I.Maker.createFiles(orms, APP_ABS_PATH + '/model');
    this.dir = appDir;

    this.loadDir('Ctrl', '/ctrl');
    this.loadDir('Const', '/const');
    this.loadDir('Lib', '/lib');
    this.loadEx();

    this.loadModelBaseClasses();
    this.loadModels('Models', '/model');
};

Loader.prototype.loadModelBaseClasses = function loadModelBaseClasses() {
    I.Maker.makeModelBaseClasses(orms);
    this.loadMemoryModelClasses(I.Maker.getClasses());
};

Loader.prototype.loadMemoryModelClasses = function loadMemoryClasses(classes) {
    for (var name in classes) {
        I.Models[name] = classes[name];
    }
};

Loader.prototype.loadClass = function loadClass(type, Class, name) {
    if (I[type] === undefined) I[type] = {};

    if (I[type][name]) throw new I.Exception(10003);
    I[type][name] = Class;
};

Loader.prototype.loadDir = function loadDir(type, dirname) {
    var self = this;
    var dir = this.dir + dirname;

    var files = fs.readdirSync(dir);
    files.forEach(function(filename) {
        var name = path.basename(filename, '.js');
        var Class = require(dir + '/' + filename)[name];
        self.loadClass(type, Class, name);
    });
};

Loader.prototype.loadModels = function loadModels(type, dirname) {
    var self = this;
    var dir = this.dir + dirname;

    var files = fs.readdirSync(dir);
    files.forEach(function(filename) {
        var name = path.basename(filename, '.js');
        var Class = require(dir + '/' + filename)[name];
    });
};

Loader.prototype.loadEx = function loadEx() {
    var exFullPath = this.dir + '/config/ex.js';
    var ex = require(exFullPath).ex;
    for (var i in ex) {
        I.ExceptionCodes[i] = ex[i];
    }
};

exports.Loader = new Loader();
